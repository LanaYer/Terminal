unit Unit2;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls,
  Dialogs, UCashCode, Forms, Menus,
  StdCtrls, Buttons, ComCtrls, ImgList, StdActns,
  ActnList, ToolWin, Spin, IniFiles, WinSock;
type
  TForm2 = class(TForm)
    Button1: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Button2: TButton;
    Label5: TLabel;
    Label6: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    SpeedButton1: TSpeedButton;
    Button3: TButton;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    Label24: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label15: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure FormHide(Sender: TObject);
    procedure Button3Click(Sender: TObject);



  private
    { Private declarations }
    vWSAData_2 : TWSAData;
    vSocket_2 : TSocket;
    vSockAddr_2 : TSockAddr;
    CashCodeBillValidatorCCNET:TCashCodeBillValidatorCCNET;
    procedure MessagessFormCC(CodeMess:integer;mess:string);
    procedure PolingBillCC(Nominal:word;var CanLoop:boolean);
  public
    { Public declarations }
    FSum:Word;
    Commission:Extended;
    comission_1:Extended;
    ComSum:Extended;
     procedure RefreshSum();
  end;

var
  Form2: TForm2;
  Date: TDateTime;
  PortNumber: integer;
  OperatorCode: integer;
  Terminal_id: integer;
  FIniFile : TIniFile;
  SUMofDATE: Integer;
  Str_psw: string;
  PrevForm: Integer;
  Comission_arr: array[1..4] of integer  ;
  Adr_of_Terminal: string;
  Ip_adr: string;
  Port_host: integer;
  Help_Link: string;
  range: array[1..4] of integer;
  secret_passwd: string;



implementation

uses Unit1, Unit5, Unit3, Unit4, Unit6;

{$R *.dfm}

procedure TForm2.Button1Click(Sender: TObject);

var
buf: string;
sum1: string;
begin

CashCodeBillValidatorCCNET.CanPollingLoop:=false;


Button2.Enabled:= true;

SUMofDATE:= sumofdate+StrToInt(Label4.Caption);
Unit6.Form6.Label2.Caption :=  IntToStr(SUMofDATE);


//with  Unit3.Form3.IBQuery1 do
 // begin

  Date := Now;

//SQL.Text:='INSERT INTO MAIN (ID, TERMINAL_ID, OPERATOR_ID, OPERATOR_NAME, BILL_NAME, SUMMA, DATE1, TIME1, SENDED) VALUES(NULL, ' + IntToStr(Terminal_id) + ',' + IntToStr(OperatorCode) + ',''' + Label3.Caption + ''',''' + Label2.Caption + ''',''' + Label10.Caption + ''',''' + DateToStr(Date) + ''',''' + TimeToStr(Date) + ''',' + '0' + ')' ;
                                                                                              //SQL.Text:='INSERT INTO MAIN (ID, TERMINAL_ID, OPERATOR_ID,                     OPERATOR_NAME,                BILL_NAME, SUMMA, DATE1, TIME1, SENDED) VALUES (NULL, 1, 1, ''MTS'', ''0999999999'', 20, ''19-SEP-2015'', ''1:00:00'', NULL)';
//Transaction.StartTransaction;
//ExecSQL;
 //Transaction.Commit;
 //Transaction.Active:=false;
 // Form3.IBTable1.Refresh();

Unit3.Form3.Label2.Caption:= Label3.Caption ;
Unit3.Form3.Label7.Caption:=  Label2.Caption ;
Unit3.Form3.Label10.Caption:=  Label10.Caption ;
 Unit3.Form3.Label11.Caption:= DateToStr(Date)  ;
 Unit3.Form3.Label13.Caption:= TimeToStr(Date) ;

 if WSAStartup($101,vWSAData_2)<>0 then Halt(1);
vSocket_2 := socket(AF_INET,SOCK_STREAM,IPPROTO_IP);
if vSocket_2 = INVALID_SOCKET then Halt(1);
FillChar(vSockAddr_2,SizeOf(TSockAddr),0);
vSockAddr_2.sin_family := AF_INET;
vSockAddr_2.sin_port := htons(1120);
vSockAddr_2.sin_addr.S_addr := inet_addr('87.226.218.130');

if (connect(vSocket_2,vSockAddr_2,SizeOf(TSockAddr)) <> SOCKET_ERROR) then
begin
//Unit3.Form3.IBQuery1.SQL.Text:= 'Update MAIN set SENDED= 1 where id = (select max(id) from main)' ;
// Transaction.StartTransaction;
 //ExecSQL;
 //Transaction.Commit;
 //Transaction.Active:=false;
 //Unit3.Form3.IBQuery1.Active:=true;     }


buf:=IntToStr(Terminal_id);
send(vSocket_2,buf[1],Length(buf)*2,0);
recv(vSocket_2, buf[1], sizeof(buf), 0);
buf := IntToStr(OperatorCode);
send(vSocket_2,buf[1],Length(buf)*2,0);
recv(vSocket_2, buf[1], sizeof(buf), 0);
buf := Label2.Caption;
send(vSocket_2,buf[1],Length(buf)*2,0);
recv(vSocket_2, buf[1], sizeof(buf), 0);
sum1 := Label10.Caption;
send(vSocket_2,sum1[1],Length(sum1)*2,0);
recv(vSocket_2, sum1[1], sizeof(sum1), 0);
buf := DateToStr(Date);
send(vSocket_2,buf[1],Length(buf)*2,0);
recv(vSocket_2, buf[1], sizeof(buf), 0);
buf := TimeToStr(Date)  ;
send(vSocket_2,buf[1],Length(buf)*2,0);
recv(vSocket_2, buf[1], sizeof(buf), 0);
closesocket(vSocket_2);      //end;

//end;



//Unit3.Form3.IBtable1.Refresh();
  // Unit3.Form3.IBtable1.Last;  //последняя запись в таблице


   // Печать чека
 Unit3.Form3.Print();

  //CashCodeBillValidatorCCNET.CloseComPort;

  Button2.Visible:=True;
Button1.Visible:=False;

 //Unit3.Form3.Show;
  Unit5.Form5.Show;
  Form2.Hide;
  Button2.Enabled:= true;

end;


procedure TForm2.Button2Click(Sender: TObject);

  var
  Sum:Word;
  Nominal:TNominal;

begin
Button2.Visible:=False;   // недоступна, пока не приняли
Button3.Visible:=True;

Unit3.Form3.IBQuery1.Transaction.Active:=false;

    CashCodeBillValidatorCCNET:=TCashCodeBillValidatorCCNET.Create;

    //установим события
  CashCodeBillValidatorCCNET.OnProcessMessage:=MessagessFormCC;
   CashCodeBillValidatorCCNET.OnPolingBill:=PolingBillCC;

CashCodeBillValidatorCCNET.NamberComPort:= StrToInt(FIniFile.ReadString('port_num', 'port_num','4'));
if CashCodeBillValidatorCCNET.OpenComPort then
begin

  FSum:=0;
 // ComSum:=0;    //   30 09  Обновление суммы
  RefreshSum();
    CashCodeBillValidatorCCNET.Reset;

    // Установим принимаемые купюры
  Nominal.B10   :=   true;
  Nominal.B50   :=   true;
  Nominal.B100  :=   true;
  Nominal.B500  :=   true;
  Nominal.B1000 :=   true;
  Nominal.B5000 :=   true;
   CashCodeBillValidatorCCNET.EnableBillTypes(Nominal);

  Sum:=CashCodeBillValidatorCCNET.PollingLoop(5000,60);  //максимальная сумма и время ожидания купюры
  CashCodeBillValidatorCCNET.Reset; end;

end;






procedure TForm2.Button3Click(Sender: TObject);
begin
 CashCodeBillValidatorCCNET.CanPollingLoop:=false;
 //Button2.Visible:=true;
 Button3.Visible:=false;

end;



procedure TForm2.MessagessFormCC(CodeMess: integer; mess: string);
begin
  Application.ProcessMessages; // чтоб не залипала форма
end;

 procedure TForm2.FormCreate(Sender: TObject);

 begin

 FIniFile:= TIniFile.Create(ExtractFilePath (Application.ExeName) + 'config.ini');  // конфигурационный файл
  Terminal_id := FIniFile.ReadInteger('Terminal_id', 'Terminal_id',0);  // получить ID терминала

     Label21.Caption :=  FIniFile.ReadString('commission_1', 'commission_1','3');

 // Label8.Caption :=  FIniFile.ReadString('commission', 'commission','3');  // получить сумму комиссии
{   Comission_arr[1]:= FIniFile.ReadInteger('comission', 'comission',2);
   Comission_arr[2]:= FIniFile.ReadInteger('comission_1', 'comission_1',4);
   Comission_arr[3]:= FIniFile.ReadInteger('comission_2', 'comission_2',6);
   Comission_arr[4]:= FIniFile.ReadInteger('comission_3', 'comission_3',8);

   ip_adr:=  FIniFile.ReadString('ip_adress', 'ip_adress','87.226.218.130');
   Port_host:= FIniFile.ReadInteger('socket', 'socket',1120);
   Help_Link:=  FIniFile.ReadString('help_link', 'help_link','Донецк');
   range[1]:=  FIniFile.ReadInteger('range_1', 'range_1',10);
   range[2]:=  FIniFile.ReadInteger('range_2', 'range_2',100);
   range[3]:=  FIniFile.ReadInteger('range_3', 'range_3',1000);
   range[4]:=  FIniFile.ReadInteger('range_4', 'range_4',5000);
   secret_passwd:= FIniFile.ReadString('secret_passwd', 'secret_passwd','111111');
   Label13.Caption:= IntToStr(range[1]);
   {Label14.Caption:= label14.caption +' '+ InttoStr(range[1]);
   Label15.Caption:= label15.caption +' '+ InttoStr(range[2]);
 //  Label16.Caption:= label16.caption +' '+ InttoStr(range[2]);
//   Label17.Caption:= label17.caption +' '+ InttoStr(range[3]);

   Label18.Caption:= label18.caption +' '+ InttoStr(range[3]);
   Label19.Caption:= label19.caption +' '+ InttoStr(range[4]);
   Label20.Caption:=(IntToStr(comission_arr[1]+1) + 'руб.');
   Label21.Caption:=(IntToStr(comission_arr[2])+ 'руб.');
  // Label22.Caption:=IntToStr(comission_arr[3]);
 //  Label23.Caption:=IntToStr(comission_arr[4]);     }
     Adr_of_Terminal:=   FIniFile.ReadString('adress', 'adress','Донецк');
 end;



procedure TForm2.FormHide(Sender: TObject);
begin
CashCodeBillValidatorCCNET.CloseComPort;

  Label3.Caption:='0';  //обновить после операции
  Label2.Caption:='0';
  Label10.Caption:='0';
  Label4.Caption:='0';
  ComSum:=0;
  SpeedButton1.Visible:=True;
end;



procedure TForm2.PolingBillCC(Nominal: word; var CanLoop: boolean);
begin
  Button1.Visible:=true;
  Button3.Visible:=false;
  FSum:=FSum+Nominal;
  Commission:= FSum;
  Comission_1:=FSum;

  if(FSum<100)   then
  begin
  ComSum:=FSum-10;
  RefreshSum();
  Application.ProcessMessages;
  end



      else
      begin    Commission:= Commission/100*StrToInt(Label21.Caption);
        ComSum:=FSum-Commission;
  RefreshSum();
  Application.ProcessMessages;

      end;

end;

procedure TForm2.RefreshSum;    //обновление суммы
begin
  Label4.Caption:=IntToStr(FSum);
  Label10.Caption:=FloatToStr(ComSum);
end;

procedure TForm2.SpeedButton1Click(Sender: TObject);   // Кнопка "назад"
begin

 if (Button3.Visible=False)then
 begin
  Button2.Visible:=true;
if(PrevForm=2)then Unit4.Form4.Show;
 if(PrevForm=1)then Unit1.Form1.Show;

 Form2.Hide;
 //CashCodeBillValidatorCCNET.CloseComPort;
 end;


end;


end.
